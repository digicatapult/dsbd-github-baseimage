#!/bin/sh

# PROVIDE: dsbd_lab
# REQUIRE: NETWORKING LOGIN FILESYSTEM
# BEFORE: securelevel

. /etc/rc.subr

name="dsbd_lab"
rcvar="dsbd_lab_enable"
start_cmd="dsbd_lab_start"

mount_point="/mnt"
smb_share="//10.0.2.4/qemu"

enable_runners() {
    # Enable the packages' rc.d scripts
    sysrc pot_enable="YES"
    sysrc gh_actions_enable="YES"
}

bootstrap_pkg() {
    pkg64 -N > /dev/null || pkg64 bootstrap -y > /dev/null
    pkg64 install -y curl git pot > /dev/null
}

configure_pot() {
    if [ ! -d "$HOME/pot" ]; then
        git -C $HOME clone https://github.com/digicatapult/pot --no-progress
    fi
    cd $HOME/pot

    # Copy to /usr/local64 for the hybrid ABI port
    for dir in bin etc share; do
        cp -fR ./$dir /usr/local64/
    done

    # Enable the virtual NIC, basic logging, and VNET isolation
    echo "# pot configuration file
POT_CACHE=/opt/pot/cache
POT_EXTIF=vtnet0
POT_ISOLATE_VNET_POTS=true
POT_LOG_FACILITY=local2" > /usr/local64/etc/pot/pot.conf

    pot init

    echo "Finished configuring Pot"
}

install_act() {
    if [ ! -d "$HOME/act-pot-cheribsd" ]; then
        git -C $HOME clone https://github.com/digicatapult/act-pot-cheribsd --no-progress
    fi
    cd $HOME/act-pot-cheribsd
    # Install runner scripts/flavours
    ./install.sh
}

setup_zfs() {
    if ! zpool list | grep -q "jailroot"; then
        zpool create -f jailroot vtbd1
    fi

    zfs list | grep -q "/opt/pot" || zfs create -o mountpoint=/opt/pot -o compression=on zroot/pot
    zfs list | grep -q "/opt/pot/jails" || zfs create -o mountpoint=/opt/pot/jails -o overlay=on -o compression=on jailroot/jails
    zfs mount -a
    zpool upgrade zroot
}

check_and_mount_smb() {
    if ! mount | grep -q "on ${mount_point} "; then
        mkdir -p ${mount_point}
        mount_smbfs -o rw -I 10.0.2.4 -N ${smb_share} ${mount_point} || {
            echo "[error] Failed to mount ${smb_share} on ${mount_point}"
            return 1
        }
    fi
}

set_env_vars() {
    export PATH=$PATH:/usr/local64/bin
    export HOME=/root

    env_file="$HOME/.profile"

    # Add secrets via Samba/SMB mount
    if [ -f "${mount_point}/github_pat.secret" ]; then
        GITHUB_TOKEN=$(cat "${mount_point}/github_pat.secret")
        echo "export GITHUB_TOKEN='${GITHUB_TOKEN}'" >> $env_file
    fi

    if [ -f "${mount_point}/github_org.txt" ]; then
        GITHUB_ORG=$(cat "${mount_point}/github_org.txt")
        echo "export GITHUB_ORG='${GITHUB_ORG}'" >> $env_file
    fi
}

fetch_manifests() {
    manifests="/usr/local/share/freebsd/MANIFESTS"
    mkdir -p $manifests
    releases=$(curl -sS "https://download.cheribsd.org/releases/arm64/aarch64c/" | grep -Eo "\w{1,}\.\w{1,}" | sort -u)

    # Create a set of valid CheriBSD releases
    for release in $releases; do
        curl -sS -C - "https://download.cheribsd.org/releases/arm64/aarch64c/$release/ftp/MANIFEST" > "$manifests/arm64-aarch64c-$release-RELEASE"
    done

    echo "Fetched CheriBSD manifests"
}

get_latest_version() {
    if [ ! -z $(echo releases) ]; then
        version=$(echo $releases | awk -F " " '{print $NF}')
    else
        version="23.11"
    fi
    echo $version
}

create_base() {
    base_name=$(get_latest_version)

    # Create a base pot for the latest aarch64c release
    if [ ! $(pot list -b | grep -Eo '$base_name') ]; then
        pot create-base -r $base_name
    fi

    # Copy libraries for the hybrid and benchmark ABIs
    for lib in lib64 lib64cb; do
        cp -nR /usr/$lib /opt/pot/bases/$base_name/usr/
    done
}

create_base_bridge() {
    bridge_name="bridge-"$(get_latest_version)

    # Create a private VNET for the release
    pot create-private-bridge -B $bridge_name -S 256
    pot vnet-start -B $bridge_name
}

configure_base_sshd() {
    base_dir="/opt/pot/bases/"$(get_latest_version)
    mkdir -p "$base_dir/root/.ssh/"

    # Copy x.509 settings to the base pot for downstream jails to use
    sshd_config="AuthorizedKeysFile .ssh/authorized_keys
ChallengeResponseAuthentication no
PasswordAuthentication no
PermitRootLogin without-password
PubkeyAuthentication yes
UsePAM no"

    echo "$sshd_config" > "$base_dir/etc/ssh/sshd_config"
    echo 'sshd_enable="YES"' >> "$base_dir/etc/rc.conf"

    echo "Finished configuring the base pot"
}

start_pots() {
    count=0
    max=3
    . "$HOME/.profile"
    cd "$HOME/act-pot-cheribsd"
    echo "Configuring GitHub Actions runners"
    while [ "$count" -lt "$max"]
    do
        echo "Configuring runner $((count+1))"
        ./config.sh --url https://github.com/$(GITHUB_ORG) --token $(GITHUB_TOKEN)
        count=$((count+1))
    done
    echo "Finished configuring runners"
    /etc/cron.d/restart-actions.sh
}

dsbd_lab_start() {
    check_and_mount_smb
    set_env_vars

    setup_zfs

    bootstrap_pkg
    fetch_manifests

    configure_pot

    install_act
    #create_base
    #create_base_bridge
    #configure_base_sshd

    enable_runners
    start_pots
}

load_rc_config $name
: ${dsbd_lab_enable:=yes}
run_rc_command "$@"
